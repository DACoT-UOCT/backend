version: "3"
services:
  backend:
    container_name: backend
    image: backend:0
    restart: on-failure
    environment:
      - MONGO_URI
    networks:
      default:
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    expose:
      - 5000
    ports:
      - 80:5000
  mongo-setup:
    container_name: mongo-setup
    image: mongo:4.0.19-xenial
    restart: on-failure
    environment:
      - DOCKER_MONGO_PUBLIC_ADDR
    networks:
      default:
    volumes:
      - ./deploy:/scripts
    entrypoint: [ "/scripts/mongo-setup.sh" ]
    depends_on:
      - mongo1
      - mongo2
      - mongo3
  mongo1:
    hostname: mongo1
    container_name: localmongo1
    image: mongo:4.0.19-xenial
    expose:
      - 27017
    ports:
      - 30001:27017
    restart: always
    volumes:
      - ./deploy/mongo-data/data1:/data/db
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rsuoct" ]
  mongo2:
    hostname: mongo2
    container_name: localmongo2
    image: mongo:4.0.19-xenial
    expose:
      - 27017
    ports:
      - 30002:27017
    restart: always
    volumes:
      - ./deploy/mongo-data/data2:/data/db
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rsuoct" ]
  mongo3:
    hostname: mongo3
    container_name: localmongo3
    image: mongo:4.0.19-xenial
    expose:
      - 27017
    ports:
      - 30003:27017
    restart: always
    volumes:
      - ./deploy/mongo-data/data3:/data/db
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rsuoct" ]
